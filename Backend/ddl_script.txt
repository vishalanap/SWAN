create table taxi(
	taxi_id int NOT NULL,
	taxi_number int NOT NULL,
	capacity int NOT NULL,
	color varchar(20),
	model varchar(20),
	class varchar(20),
	PRIMARY KEY(taxi_id)
);

create table shifts(
	shift_id int NOT NULL,
	shift_time varchar(20),
	PRIMARY KEY(shift_id)
);

create table location(
	location_name varchar(20),
	zipcode int NOT NULL,
	PRIMARY KEY(zipcode)
);

create table admin(
	admin_id int NOT NULL,
	taxi_id int NOT NULL,
	driver_id int NOT NULL,
	taxi_status varchar(20),
	PRIMARY KEY(admin_id),
	FOREIGN KEY(taxi_id) REFERENCES taxi(taxi_id) on DELETE CASCADE,
	FOREIGN KEY(driver_id) REFERENCES driver(driver_id) on DELETE CASCADE
);
	
	
create table driver(
	driver_id int NOT NULL,
	first_name varchar(20),
	last_name varchar(20),
	ratings varchar(10),
	phone_no varchar(10),
	taxi_id int NOT NULL,
	shift_id int NOT NULL,
	PRIMARY KEY(driver_id),
	FOREIGN KEY(taxi_id) REFERENCES taxi(taxi_id) on DELETE CASCADE,
	FOREIGN KEY(shift_id) REFERENCES shifts(shift_id) on DELETE CASCADE
);


create table users(
	user_id int NOT NULL ,
	first_name varchar(20),
	last_name varchar(20),
	phone_no varchar(10),
	address varchar(100),
	primary key(user_id)
);

create table grievance(
	grievance_id int not null,
	user_id int not null,
	admin_id int not null,
	grievance_data varchar(150),
	primary key (grievance_id),
	foreign key(user_id) references users(user_id) on delete cascade,
	foreign key(admin_id) references admin(admin_id) on delete cascade
);

create table trip(
	trip_id int not null,
	taxi_id int not null,
	start varchar(20),
	end varchar(20),
	driver_id int not null,
	user_id int not null,
	start_place varchar(30),
	destination varchar(30),
	fare varchar(10),
	ratings varchar(10),
	duration varchar(20),
	primary key(trip_id),
	foreign key(user_id) references users(user_id) on delete cascade,
	FOREIGN KEY(taxi_id) REFERENCES taxi(taxi_id) on DELETE CASCADE,
	FOREIGN KEY(driver_id) REFERENCES driver(driver_id) on DELETE CASCADE
);

create table owner(
	owner_id int not null,
	admin_id int not null,
	taxi_id int not null,
	primary key(owner_id),
	foreign key(admin_id) references admin(admin_id) on delete cascade,
	foreign key(taxi_id) references taxi(taxi_id) on delete cascade
);
	
create table present_at(
	driver_id int not null,
	zipcode int not null,
	primary key(driver_id, zipcode),
	foreign key(driver_id) references driver(driver_id) on delete cascade,
	foreign key(zipcode) references location(zipcode) on delete cascade
);